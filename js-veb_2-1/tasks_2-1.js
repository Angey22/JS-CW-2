// –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 3. –ú–∞—Å—Å–∏–≤—ã

//* Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º
// 1. –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ "genres" —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// 2. –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// 3. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// 4. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// 5. –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// 6. –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggae¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.


// 1-–µ —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "genres" –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ - –º–∞—Å—Å–∏–º –∏–∑ 2-—Ö –∑–∞–¥–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
const genres = ["Jazz", "Blues"];

// –í—ã–≤–æ–¥–∏–º —Å–æ–∑–¥–∞–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ =>', genres);


// 2-–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤
genres.push("–†–æ–∫-–Ω-—Ä–æ–ª–ª");

// –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ =>', genres);


// 3-–µ –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å 1-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres"
console.log('1-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres" =>', genres[0]);


// 4-–µ –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres" —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ –±—ã –∫–æ–¥ –≤—ã–≤–æ–¥–∞ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è –º–∞—Å—Å–∏–≤–∞ —Å –ª—é–±–æ–π –¥–ª–∏–Ω–æ–π.
console.log('–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres" =>', genres[genres.length - 1]);


// 5-–µ –£–¥–∞–ª—è–µ–º 1-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres" –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º (–≤—ã–≤–æ–¥–∏–º) —É–¥–∞–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
// console.log('–í—ã–≤–æ–¥–∏–º —É–¥–∞–ª–µ–Ω–Ω—ã–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç "shift" =>', genres.shift());

// –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–µ–≥–æ 1-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞) –≤ –∫–æ–Ω—Å–æ–ª—å
// console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–µ–≥–æ 1-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ "shift" =>', genres);

// –í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –º–µ—Ç–æ–¥—É "shift()", –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ–µ—Ç 1-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥ "unshift([–æ–¥–∏–Ω –∏–ª–∏ –≥—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤])", –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ –æ–¥–∏–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// –£–¥–∞–ª—è–µ–º 1-–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ "genres" –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º (–≤—ã–≤–æ–¥–∏–º) —É–¥–∞–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('–í—ã–≤–æ–¥–∏–º —É–¥–∞–ª–µ–Ω–Ω—ã–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç "splice" =>', genres.splice(0, 1));

// –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–µ–≥–æ 1-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞) –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–µ–≥–æ 1-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ "splice" =>', genres);


// 6-–µ –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ "genres" –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞: ¬´Country¬ª –∏ ¬´Reggae¬ª
genres.splice(0, 0, "Country", "Reggae");

// –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ (–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–µ–≥–æ 2-—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤) –≤ –∫–æ–Ω—Å–æ–ª—å
console.log('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–µ–≥–æ 2-—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ "splice" =>', genres);


//* Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º. –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ "S = a * b", –≥–¥–µ "–∞" - —ç—Ç–æ –≤—ã—Å–æ—Ç–∞, –∞ "b" - —à–∏—Ä–∏–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç–æ—Ä–æ–Ω –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π "—Å—Ä–æ–∫—É" —Å 2-—è –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–æ–º 
const values = '8 11';

const valuesArray = values.split(' ');
// const square = +valuesArray[0] * +valuesArray[1];
// console.log("valuesArray", typeof valuesArray[0])

const square = valuesArray[0] * valuesArray[1];
console.log(`–ü–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤—ã—Å–æ—Ç–æ–π ${valuesArray[0]} –µ–¥. –∏ —à–∏—Ä–∏–Ω–æ–π ${valuesArray[1]} –µ–¥. => S = ${valuesArray[0]} * ${valuesArray[1]} = ${square} –µ–¥.^2`);

// –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é –º–∞—Å—Å–∏–≤–∞ —è–≤–ª—è–µ—Ç—Å—è —Ç–æ, —á—Ç–æ —Å–∏–º–≤–æ–ª—ã —Ü—ã—Ñ—Ä –ø–æ–ø–∞–¥–∞—è –≤ —è—á–µ–π–∫—É –º–∞—Å—Å–∏–≤–∞ - "—É—Å–ª–æ–≤–Ω–æ" –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –∫–∞–∫ —á–∏—Å–ª–∞, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º - –æ—Å—Ç–∞—é—Ç—Å—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö, –∏–¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏—Ö –≤ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö - "—á–∏—Å–ª–æ", –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã "Number" –∏–ª–∏ "+".


//* Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ "fruits" —Ü–∏–∫–ª–æ–º "for". –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "fruits" –∏ –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ 
const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã', 'üçí'];

// –°–æ–∑–¥–∞–µ–º —Ü—ã–∫–ª –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞
for (let i = 0; i < fruits.length; i++) {
    // –ó–∞–¥–∞–µ–º —É—Å–ª–æ–≤–∏—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫–∏ —Å –Ω–æ–º–µ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º–∞—Å—Å–∏–≤–∞ –∏ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü—ã–∫–ª–∞
    console.log(`${i + 1} - ${fruits[i]}`);
}


//* Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö "names" –∏ "phones" —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// –°–æ–∑–¥–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ, –∑–∞–¥–∞–Ω—ã–µ —É—Å–ª–æ–≤–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ 
const names = 'Jacob,William,Solomon,Artemis';
const phones = '89001234567,89001112233,890055566377,890055566300';

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Å—Å–∏–≤—ã –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å —ç—Ç–∏ - —É–±–∏—Ä–∞–µ–º –∏–∑ –Ω–∏—Ö —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª ","
const namesArray = names.split(',');
const phonesArray = phones.split(',');

// –°–æ–∑–¥–∞–µ–º —Ü—ã–∫–ª –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–±–æ—Ä–∞ 2-—Ö –º–∞—Å—Å–∏–≤–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω—ã

// 1-–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è - —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü—ã–∫–ª–∞ "for"
// for (let i = 0; i < namesArray.length; i++) {
//     // –ó–∞–¥–∞–µ–º —É—Å–ª–æ–≤–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ —Å –∏–º–µ–Ω–µ–º –∏–∑ 1-–≥–æ –º–∞—Å—Å–∏–≤–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ 2-–≥–æ –º–∞—Å—Å–∏–≤–∞, —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥-–¥—Ä—É–≥—É.
//     console.log(`–ò–º—è - ${namesArray[i]} - —Ç–µ–ª–µ—Ñ–æ–Ω: ${phonesArray[i]}`);
// }

// 2-–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è - —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü—ã–∫–ª–∞ "for...in"
for (const i in namesArray) {
    // –ó–∞–¥–∞–µ–º —É—Å–ª–æ–≤–∏—è –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ —Å –∏–º–µ–Ω–µ–º –∏–∑ 1-–≥–æ –º–∞—Å—Å–∏–≤–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ 2-–≥–æ –º–∞—Å—Å–∏–≤–∞, —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥-–¥—Ä—É–≥—É.
    console.log(`–ò–º—è - ${namesArray[i]} - —Ç–µ–ª–µ—Ñ–æ–Ω: ${phonesArray[i]}`);
}

// –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ü—ã–∫–ª–∞ "for...in" —è–≤–ª—è–µ—Ç—Å—è —Ç–æ, —á—Ç–æ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "i"), –Ω–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–∞–∫ —Ü—ã–∫–ª "for...of", –∞ –ò–ù–î–ï–ö–° - –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º–æ–≥–æ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞.


//* Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–æ —Å—Ç—Ä–æ–∫–æ–π
const string = 'Welcome to the future';

// –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏—Å—Ö–ª–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
console.log(`–ò—Å—Ö–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ -> "${string}"`);

// –°–æ–∑–¥–∞–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ: 1-–µ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ "split(' ')" —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—â–µ–≥–æ—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "string"; 2-e —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ "slice(1)" —Å–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞, –Ω–æ –±–µ–∑ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (—Ç.–µ. –±–µ–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏); 3-e —Å–æ–µ–¥–∏–Ω—è–µ–º –Ω–æ–≤–æ—Å–æ–∑–¥–∞–Ω—É—é –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞, —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ "join(' ')", –≤ —Å—Ç—Ä–æ–∫—É
const stringArray = string.split(' ').slice(1).join(' ');

// –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–µ–∑–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞
console.log(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±—Ä–µ–∑–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞ -> "${stringArray}"`);


// Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–æ —Å—Ç—Ä–æ–∫–æ–π
const string2 = 'Welcome to the future';

// –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏—Å—Ö–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –µ–≥–æ "–∏–Ω–≤–µ—Ä—Å–∏–µ–π"
console.log(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ "–∏–Ω–≤–µ—Ä—Å–∏–µ–π" -> "${string2}"`)

// –°–æ–∑–¥–∞–µ–º –≤—Å–ø–æ–º–∞–≥–∞—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞, —Å–æ–∑–¥–∞–Ω–æ–≥–æ (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–≥–æ) –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
const string2Array = string2.split('');

// –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å "–ø—É—Å—Ç—ã–º" –º–∞—Å—Å–∏–≤–æ–º
const invertStringArray = [];

// –°–æ–∑–¥–∞–µ–º —Ü—ã–∫–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞ "string2Array" –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –≤ –¥—Ä—É–≥–æ–π –º–∞—Å—Å–∏–≤ -> "invertStringArray"
for (let i = string2.length - 1; i >= 0; i--) {
    invertStringArray.push(string2Array[i]);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ—á–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –µ–π –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è—â–µ–≥–æ –∏–∑ "–Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ" —Ü—ã–∫–ª–æ–º –º–∞—Å—Å–∏–≤–∞ "invertStringArray"
const invertString = invertStringArray.join('');

// –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ "–∏–Ω–≤–µ—Ä—Å–∏–∏"
console.log(`–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ "–∏–Ω–≤–µ—Ä—Å–∏–∏" --> "${invertString}"`);


// Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];

// –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ "sort()"
const LangsSorted = langs.sort();
console.log('–ú–µ—Ç–æ–¥ "sort()" ->', LangsSorted);

// –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ "–ø—É–∑—ã—Ä—å–∫–æ–≤"
for (const i in langs) {
    let wasSwap = false;
    for (let j = 0; j < langs.length - 1 - i; j++) {
        if (langs[j].charCodeAt(0) > langs[j + 1].charCodeAt(0)) {
            const swap = langs[j];
            langs[j] = langs[j + 1];
            langs[j + 1] = swap;
            wasSwap = true;
        }
        if (!wasSwap) break;
    }
}
console.log('–ú–µ—Ç–æ–¥ "–ø—É–∑—ã—Ä—å–∫–æ–≤" ->', langs);